// This file is generated by cargo_embargo.
// Do not modify this file after the first "rust_*" or "genrule" module
// because the changes will be overridden on upgrade.
// Content before the first "rust_*" or "genrule" module is preserved.

package {
    default_applicable_licenses: [
        "external_rust_crates_futures-channel_license",
    ],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
//
// large-scale-change included anything that looked like it might be a license
// text as a license_text. e.g. LICENSE, NOTICE, COPYING etc.
//
// Please consider removing redundant or irrelevant files from 'license_text:'.
// See: http://go/android-license-faq
license {
    name: "external_rust_crates_futures-channel_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
        "SPDX-license-identifier-BSD",
        "SPDX-license-identifier-MIT",
    ],
    license_text: [
        "LICENSE",
        "LICENSE-APACHE",
        "LICENSE-MIT",
    ],
}

rust_test {
    name: "futures-channel_test_src_lib",
    host_supported: true,
    crate_name: "futures_channel",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.30",
    srcs: ["src/lib.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    test_options: {
        unit_test: true,
    },
    edition: "2018",
    features: [
        "alloc",
        "default",
        "futures-sink",
        "sink",
        "std",
    ],
    rustlibs: [
        "libfutures",
        "libfutures_core",
        "libfutures_sink",
        "libfutures_test",
    ],
}

rust_test {
    name: "futures-channel_test_tests_channel",
    host_supported: true,
    crate_name: "channel",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.30",
    srcs: ["tests/channel.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    test_options: {
        unit_test: true,
    },
    edition: "2018",
    features: [
        "alloc",
        "default",
        "futures-sink",
        "sink",
        "std",
    ],
    rustlibs: [
        "libfutures",
        "libfutures_channel",
        "libfutures_core",
        "libfutures_sink",
        "libfutures_test",
    ],
}

rust_test {
    name: "futures-channel_test_tests_mpsc",
    host_supported: true,
    crate_name: "mpsc",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.30",
    srcs: ["tests/mpsc.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    test_options: {
        unit_test: true,
    },
    edition: "2018",
    features: [
        "alloc",
        "default",
        "futures-sink",
        "sink",
        "std",
    ],
    rustlibs: [
        "libfutures",
        "libfutures_channel",
        "libfutures_core",
        "libfutures_sink",
        "libfutures_test",
    ],
}

rust_test {
    name: "futures-channel_test_tests_mpsc-close",
    host_supported: true,
    crate_name: "mpsc_close",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.30",
    srcs: ["tests/mpsc-close.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    test_options: {
        unit_test: true,
    },
    edition: "2018",
    features: [
        "alloc",
        "default",
        "futures-sink",
        "sink",
        "std",
    ],
    rustlibs: [
        "libfutures",
        "libfutures_channel",
        "libfutures_core",
        "libfutures_sink",
        "libfutures_test",
    ],
}

rust_test {
    name: "futures-channel_test_tests_mpsc-size_hint",
    host_supported: true,
    crate_name: "mpsc_size_hint",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.30",
    srcs: ["tests/mpsc-size_hint.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    test_options: {
        unit_test: true,
    },
    edition: "2018",
    features: [
        "alloc",
        "default",
        "futures-sink",
        "sink",
        "std",
    ],
    rustlibs: [
        "libfutures",
        "libfutures_channel",
        "libfutures_core",
        "libfutures_sink",
        "libfutures_test",
    ],
}

rust_test {
    name: "futures-channel_test_tests_oneshot",
    host_supported: true,
    crate_name: "oneshot",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.30",
    srcs: ["tests/oneshot.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    test_options: {
        unit_test: true,
    },
    edition: "2018",
    features: [
        "alloc",
        "default",
        "futures-sink",
        "sink",
        "std",
    ],
    rustlibs: [
        "libfutures",
        "libfutures_channel",
        "libfutures_core",
        "libfutures_sink",
        "libfutures_test",
    ],
}

rust_library {
    name: "libfutures_channel",
    host_supported: true,
    crate_name: "futures_channel",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.30",
    srcs: ["src/lib.rs"],
    edition: "2018",
    features: [
        "alloc",
        "default",
        "futures-sink",
        "sink",
        "std",
    ],
    rustlibs: [
        "libfutures_core",
        "libfutures_sink",
    ],
    apex_available: [
        "//apex_available:platform",
        "com.android.btservices",
        "com.android.resolv",
        "com.android.virt",
    ],
    product_available: true,
    vendor_available: true,
    min_sdk_version: "29",
}
